services:
    
  nginx: # Load Balancer
    image: nginx:stable-alpine
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    ports:
      - "9999:9999"
    # deploy:
    #   resources:
    #     limits:
    #       # cpus: '0.5'
    #       memory: '128MB'

  redis:
    image: redis
    hostname: redis
    # command: redis-server --save "" --appendonly no --maxclients 20000
    # deploy:
    #   resources:
    #     limits:
    #       # cpus: '0.10'
    #       memory: '0.3GB'

  db: # Banco de dados
    image: postgres:18-alpine3.21
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DATABASE
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./config/postgresql:/etc/postgresql
      - rinha-data:/var/lib/postgresql/data
    ports:
      - "6666:5432"
    command: |
      postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.55'
    #       memory: '1.2GB'
    healthcheck:
      test: nc -z localhost 5432
      timeout: 3s
      start_period: 3s

  api:
    build:
      context: ./app
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      DATABASE_URL: $DATABASE_URL
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DATABASE: $POSTGRES_DATABASE
      POSTGRES_HOSTNAME: db
    deploy:
      replicas: 2



volumes:
  rinha-data: {}